#%RAML 1.0
title: Accounts API
types:
  Account: !include datatypes/account.raml
  AccountNoID: !include datatypes/AccountNoID.raml

/accounts:
  get:
    headers:
      Requester-ID:
        description: id of the person requesting the accounts information
        required: false
    queryParameters:
      type:
        required: false
        type: string
        enum: ["personal","business"]
      name:
        description: The system will look for names that contain the given value in the name parameter.
        required: false
        type: string
      country:
        description: The system will look for countries that contain the given value in the country parameter.
        required: false
        type: string
    responses:
      200:
        body:
          application/json:
            type: Account[]
            example: !include examples/accountsExample.raml
      400:
        body:
          application/json:
            example:
              "message": {"Error retrieving data from the Account database."}

  /{id}:
    get:
      queryParameters:
        id:
          description: id is a URI parameter that should match the accountID column of the flights_customers database and return it
          required: false
          type: string
      responses:
        200:
          body:
            application/json:
              example:
                !include examples/accountExample.raml
        400:
          body:
            application/json:
              example:
                "message": {"Error retrieving data from the Account database with that id."}

    put:
      queryParameters:
        id:
          description: id is a URI parameter that should match the accountID column of the flights_customers database and replace it 
          required: false
          type: string
      responses:
        200:
          body:
            application/json:
              example:
                "message": {"message": "account replaced (but not really)"}
        400:
          body:
            application/json:
              example:
                "message": {"Error replace data from the Account database with that id."}
  
    patch:
      queryParameters:
        id:
          description: id is a URI parameter that should match the accountID column of the flights_customers database and update it
          required: false
          type: string
      responses:
        200:
          body:
            application/json:
              example:
                "message": {"message": "account modified (but not really)"}
        400:
          body:
            application/json:
              example:
                "message": {"Error updating data from the Account database with that id."}

    delete:
      queryParameters:
        id:
          description: id is a URI parameter that should match the accountID column of the flights_customers database and delete it
          required: false
          type: string
      responses:
        200:
          body:
            application/json:
              example:
                "message": {"message": "account deleted (but not really)"}
        400:
          body:
            application/json:
              example:
                "message": {"Error deleting data from the Account database with that id."}


  post:
    description: Creates new accounts based on a given array of Account objects.
    headers:
      Requester-ID:
        description: id of the person requesting the accounts information
        required: true
    body:
      application/json:
        description: Payload should be an array of Account objects with all fields present for each Account object.
        type: AccountNoID[]
        example: !include examples/accountsExampleNoID.raml
    responses:
      201:
        body:
          application/json:
            example: {
              "message": "Accounts uploaded (but not really)."
            }
      400:
        body:
          application/json:
            example: {
               "message": "Error creating accounts. Please check the JSON object and make sure it's valid."
             }


              
              


        
      
